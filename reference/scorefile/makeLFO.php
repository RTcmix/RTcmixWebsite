<html lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<title>RTcmix - Reference - makeLFO</title>
	
	<link rel="stylesheet" type="text/css" href="/includes/style.css">
	
</head>
<body>
	
<?php include($_SERVER['DOCUMENT_ROOT'].'/includes/head.inc'); ?>


<b>makeLFO</b> - set up a low-frequency oscillator (LFO) for control purposes,
using a <i>pfield-handle</i> connect to an Instrument parameter
</P>
<P>


<HR>
<h3>Synopsis</h3>
<P>
pfield = <b>makeLFO</b>(<i>"waveform"</i>, [<i>interp_type</i>,] <i>frequency</i>, <i>amp/min</i>[, <i>max</i>])
<p>
Parameters inside the [brackets] are optional.
</P>
<P>


<HR>
<h3>Description</h3>
<P>
<b>makeLFO</b>
returns a <i>pfield-handle</i> that will deliver data from an internal
low-frequency oscillator (LFO) inside RTcmix for controlling various
Instrument parameters perdiodically.  The waveform used is deteremined
by the <i>"waveform"</i> argument, with the frequency (in Hz) set by the
<i>frequency</i> argument.  There is no real upper bound on the 'low
frequency' used, but practically the upper limit is constrained by the
control reset rate (see the
<a href="reset.php">reset</a>
scorefile command for a discussion of this rate).
Typically LFOs operate beyond the lower bound of human pitch-perception,
below 20-25 Hz.  Much higher rates can be used for various modulation
effects (AM, FM, etc.) but using a PField with a high control rate
to do this is rather inefficient.  RTcmix provides a number of
Instruments for performing these kinds of audio-modulation
operations (see the
<a href="/reference/instruments/FMINST.php">FMINST</a>,
<a href="/reference/instruments/AMINST.php">AMINST</a>,
<a href="/reference/instruments/AM.php">AM</a> and
<a href="/reference/instruments/WIGGLE.php">WIGGLE</a>
Instruments, for example).  The LFO will produce periodic values ranging
from <i>+amp</i> to <i>-amp</i>, or <i>min</i> to <i>max</i>.  The
optional <i>interp_type</i> specifier can change how values are
delivered from the internal waveform table, in the same way that
the <i>"interp"</i> optional specifier in the
<a href="maketable.php#item_optional_specifiers">maketable</a>
command does. The active control rate (set via 
<a href="/reference/scorefile/reset.php">control_rate</a>) must be the 
same for makeLFO and the instrument that uses the LFO.
<p>
Many of the arguments for <b>makeLFO</b> may themselves
also be pfield-handles.


<HR>
<h3>Arguments</h3>
<DL>
<DT><a name="waveform" class="internallink"><i>waveform</i></A><BR>
<DD>
This string value (i.e. enclosed in "double quotes" in the scorefile)
determines the kind of waveform used by the LFO to generate periodic
values.  The <i>waveform</i> argument can also be a table-handle
referring to a waveform created by the
<a href="maketable.php">maketable</a>
command.
<p>
The following waveforms may be specified by a string argument
for <i>waveform</i>:
<ul>
	<li><i>"sine"</i> -- sine wave
	<br>
	<br>
	<li><i>"saw"</i> -- sawtooth waveform, ramping down
	<br>
	<br>
	<li><i>"sawX"</i> -- sawtooth waveform, like <i>saw</i> only
		using the first <i>X</i> harmonics
	<br>
	<br>
	<li><i>"sawup"</i> -- sawtooth waveform, ramping up
	<br>
	<br>
	<li><i>"sawdown"</i> -- sawtooth waveform, ramping down (identical
		to <i>saw</i>)
	<br>
	<br>
	<li><i>"square"</i> -- square wave
	<br>
	<br>
	<li><i>"squareX"</i> -- square waveform, like <i>square</i> only
		using the first <i>X</i> harmonics
	<br>
	<br>
	<li><i>"tri"</i> -- triangle wave
	<br>
	<br>
	<li><i>"triX"</i> -- triangle waveform, like <i>tri</i> only
		using the first <i>X</i> harmonics
	<br>
	<br>
	<li><i>"buzz"</i> -- pulse waveform
	<br>
	<br>
	<li><i>"buzzX"</i> -- pulse waveform, like <i>buzz</i> only
		using the first <i>X</i> harmonics
</ul>
<P></P></DL>

<DT><a name="interp_type" class="internallink"><i>interp_type</i></A><BR>
<DD>
This optional string argument can be either <i>"interp"</i> or
<i>"nointerp"</i>.  <i>"nointerp"</i> means that when data is read
from the LFO waveform, any requests for fractional indices into
the wavetable will be 'rounded down' (truncated) to the next-lowest
table value.  <i>"interp"</i> will apply a linear interpolation
scheme for fractional values between two table elements.  <i>"interp"</i>
is the default setting.
<P></P></DL>

<DT><a name="frequency" class="internallink"><i>frequency</i></A><BR>
<DD>
The frequency (in Hz) used for the LFO.  This should be less
than the
<a href="reset.php">reset</a>
rate.
<P></P></DL>

<DT><a name="amp-min-max"" class="internallink"><i>amp/min[, max]</i></A><BR>
<DD>
This sets the range of values that will be generated by the LFO through the
<i>pfield-handle</i>.  If a single value is present (<i>amp</i>),
then the values will travel from <i>+amp</i> to <i>-amp</i>.  If
two arguments are present, the first (<i>min</i>) will set
the minimum value coming from the LFO, and the second (<i>max</i>)
will set the upper bound.
<P></P></DL>
</DD>
<P>

<HR>
<h3>Examples</h3>
<PRE>
   vib = makeLFO("sine", 3.5, 10.0)
   pan = makeLFO("tri", 0.5, 0.0, 1.0)
   wave = maketable("wave", 1000, 1.0, 0.2, 0.1)
   WAVETABLE(0, 3.5, 15000, 478 + vib, pan, wave)
</pre>
This scorefile uses two low-frequency oscillators, one causing a
3.5 Hz sinusoidal deviation from the 478 Hz base frequency of the
<a href="/reference/instruments/WAVETABLE.php">WAVETABLE</a>
Instrument by +/- 10 Hz
through the <i>vib pfield-handle</i>, and the other controlling
the stereo placement via a 0.5 Hz triangle-wave going from a minimum
value of 0.0 to a maximum value of 1.0 (the <i>pan pfield-handle</i>).
<P>

<HR>
<h3>See Also</h3>
<p>
<a href="makeconnection.php">makeconnection</a>,
<a href="maketable.php">maketable</a>,
<a href="makerandom.php">makerandom</a>,
<a href="makefilter.php">makefilter</a>,
<a href="makeconverter.php">makeconverter</a>,
<a href="makemonitor.php">makemonitor</a>
<p>

<?php include($_SERVER['DOCUMENT_ROOT'].'/includes/foot.inc'); ?>
